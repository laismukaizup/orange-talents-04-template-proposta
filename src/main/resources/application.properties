#mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${BD_URL:jdbc:mysql://localhost:3306/proposta}
spring.datasource.username=root
spring.datasource.password=root

#jpa
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=update

# actuator
management.endpoint.health.show-details=always

#prometheus
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true

#dominio
financeiro.dominio=${FINANCEIRO_DOMINIO:http://localhost:9999/api/solicitacao}
cartao.dominio=${CARTAO_DOMINIO:http://localhost:8888/api/cartoes}

#Resource server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}
# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}


proposta.criptografia.secret=${PASSWORD:password}
